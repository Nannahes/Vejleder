library(readxl)
library(dplyr)
library('astsa')
library('forecast')

###############

Ugentlig_data <- read_excel("Data_uge.xlsx", sheet = "Data")


names(Ugentlig_data)[1] <- "Forretningsomraade"
names(Ugentlig_data)[2] <- "PrognosekundeNavn"
names(Ugentlig_data)[3] <- "ProduktgruppeNavn"
names(Ugentlig_data)[4] <- "VaregruppeNavn"
names(Ugentlig_data)[5] <- "Teknisk Klasse"
names(Ugentlig_data)[6] <- "Koel_Frost"
names(Ugentlig_data)[7] <- "Sortiment"
names(Ugentlig_data)[8] <- "Varenr"
names(Ugentlig_data)[9] <- "Varenavn"
names(Ugentlig_data)[10] <- "Week"
names(Ugentlig_data)[11] <- "Month"
names(Ugentlig_data)[12] <- "Year"
names(Ugentlig_data)[13] <- "SalgKg"
names(Ugentlig_data)[14] <- "xlFC_Total_kg"



# Følgende to linier sÃ¦tter uge 1 i december mÃ¥ned til uge 1 i januar i det følgende år..
Ugentlig_data$Year[(Ugentlig_data$Week == 1) & (Ugentlig_data$Month == "dec")] <- Ugentlig_data$Year + 1
Ugentlig_data$Month[(Ugentlig_data$Week == 1) & (Ugentlig_data$Month == "dec")] <- "jan"


#### Aldi ####

ALDI_ugentlig <- Ugentlig_data %>% filter(PrognosekundeNavn == "ALDI Marked", VaregruppeNavn == "Brystprodukter")
ALDI_ugentlig <-ALDI_ugentlig[order(ALDI_ugentlig$PrognosekundeNavn,ALDI_ugentlig$Year,ALDI_ugentlig$Week),]

ALDI_ugentlig<- aggregate(x = ALDI_ugentlig[c("SalgKg", "xlFC_Total_kg")],
                          by = ALDI_ugentlig[c("Week","Year")],
                          sum)

ALDI_ugentlig$uge_dato <- as.Date(paste(ALDI_ugentlig$Year, ALDI_ugentlig$Week, 1, sep="-"), "%Y-%U-%u")

Salg <-  ts(ALDI_ugentlig$SalgKg, frequency = 52, start = c(2019, 1)) 

plot.ts(Salg, type='l', main = "Brystprodukt ALDI", ylab = "Salg", xlab= "Uge")

acf(Salg) #Vi betragter ACF'en for Aldi dataen
#ACF falder langsomt dette kunne indikere at det er en god ide at tage diff() til dataen

ts.plot(diff(Salg)) #Her er dataen plottet for 1. differens.

acf(diff(Salg)) #Vi betragter ACF'en for 1. differensen
#Dette kunne tyde på en MA(1)- model

pacf(diff(Salg)) #Dernæst betragtes PACF'en for 1. differensen
# Dette kunne tyde på en AR(1)-model

#Et bud på en ARIMA model ville være ARIMA(1,1,1)



#### Dansk Supermarked ####
DS_ugentlig <- Ugentlig_data %>% filter(PrognosekundeNavn == "Dansk Supermarked", VaregruppeNavn == "Brystprodukter")
DS_ugentlig <- DS_ugentlig[order(DS_ugentlig$PrognosekundeNavn, DS_ugentlig$Year, DS_ugentlig$Week),]

DS_ugentlig<- aggregate(x = DS_ugentlig[c("SalgKg", "xlFC_Total_kg")],
                           by = DS_ugentlig[c("Week","Year")],
                           sum)

DS_ugentlig$uge_dato <- as.Date(paste(DS_ugentlig$Year, DS_ugentlig$Week, 1, sep="-"), "%Y-%U-%u")

Salg5 <-  ts(DS_ugentlig$SalgKg, frequency = 52, start = c(2019, 1)) 


plot.ts(Salg5, type='l', main = "Brystprodukt Dansk Supermarked", ylab = "Salg", xlab= "Uge")


acf(Salg5) # Denne indikerer at vi skal tage 1. differensen

ts.plot(diff(Salg5)) # Vi tager 1. differensen af dataen

acf(diff(Salg5)) #Denne indikere en MA(1) model

pacf(diff(Salg5)) #Denne indikerer en AR(0)

# Et bud på en ARIMA model kunne ud fra ovenstående være en ARIMA(1,1,0)

auto.arima(Salg5)
#Denne model kunne også indikerer at der er tale om sæson-udsvingninger med en sæson på S=52





